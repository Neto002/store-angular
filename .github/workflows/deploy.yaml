name: Deploy

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          ref: main

      - name: Install Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "20.11.1"

      - name: Login on Docker
        uses: docker/login-action@v2.1.0
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Replace environment variables
        run: |
          sed -i "s/OKTA_CLIENT_ID/${{ secrets.OKTA_CLIENT_ID }}/g" $GITHUB_WORKSPACE/src/app/config/my-app-config.ts
          sed -i "s/OKTA_ISSUER/${{ secrets.OKTA_ISSUER }}/g" $GITHUB_WORKSPACE/src/app/config/my-app-config.ts
          sed -i "s/API_URL/${{ secrets.API_URL }}/g" $GITHUB_WORKSPACE/src/environments/environment.ts
          sed -i "s/API_URL/${{ secrets.API_URL }}/g" $GITHUB_WORKSPACE/src/environments/environment.prod.ts
          sed -i "s/STRIPE_SECRET/${{ secrets.STRIPE_SECRET }}/g" $GITHUB_WORKSPACE/src/environments/environment.ts
          sed -i "s/STRIPE_SECRET/${{ secrets.STRIPE_SECRET }}/g" $GITHUB_WORKSPACE/src/environments/environment.prod.ts

      - name: Build Docker images
        run: |
          docker compose build

      - name: Push to Docker Hub Container Registry
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/store-frontend:latest

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: SSH into the server and deploy
        uses: appleboy/ssh-action@master
        env:
          API_URL: ${{ secrets.API_URL }}
          OKTA_CLIENT_ID: ${{ secrets.OKTA_CLIENT_ID }}
          OKTA_ISSUER: ${{ secrets.OKTA_ISSUER }}
          STRIPE_SECRET: ${{ secrets.STRIPE_SECRET }}
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          passphrase: ${{ secrets.SERVER_SSH_PASSPHRASE }}
          script: |
            docker pull ${{ secrets.DOCKER_USERNAME }}/store-frontend:latest
            docker rm -f store-frontend
            docker images | grep '${{ secrets.DOCKER_USERNAME }}/store-frontend' | awk '{print $3}' | xargs docker rmi
            docker run -d -p 4200:4200 \
            -e API_URL='$API_URL' \
            -e OKTA_CLIENT_ID='$OKTA_CLIENT_ID' \
            -e OKTA_ISSUER='$OKTA_ISSUER' \
            -e STRIPE_SECRET='$STRIPE_SECRET' \
            --name store-frontend \
            ${{ secrets.DOCKER_USERNAME }}/store-frontend:latest
